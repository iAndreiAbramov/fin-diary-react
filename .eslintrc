{
  "root": true,
  "env": {
    "browser": true,
    "es2020": true
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "import",
    "simple-import-sort",
    "jest-dom"
  ],
  "extends": [
    "react-app",
    "react-app/jest",
    "prettier",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:eslint-comments/recommended",
    "plugin:react-hooks/recommended",
    "plugin:storybook/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": ".",
    "extraFileExtensions": [
      ".mjs"
    ]
  },
  "rules": {
    "testing-library/await-async-utils": "off",
    "testing-library/no-unnecessary-act": "off",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-floating-promises": "warn",
    "@typescript-eslint/no-empty-function": "warn",
    "@typescript-eslint/restrict-plus-operands": "warn",
    "@typescript-eslint/ban-types": "warn",
    "eslint-comments/no-use": "error",
    "eslint-comments/no-unused-disable": "warn",
    "no-debugger": "warn",
    "prefer-const": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "no-console": [
      "warn",
      {
        "allow": [
          "error"
        ]
      }
    ],
    "no-unused-expressions": "off",
    "react/prop-types": "off",
    "react/display-name": "off",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-misused-promises": [
      "off",
      {
        "checksVoidReturn": false
      }
    ],
    "import/no-relative-parent-imports": "warn",
    "import/no-unresolved": "off",
    "import/first": "error",
    "import/newline-after-import": "warn",
    "import/no-duplicates": "error",
    "import/no-named-as-default-member": "off",
    "simple-import-sort/exports": "off",
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first.
          [
            "^react",
            "^@?\\w"
          ],
          // Internal packages.
          [
            "^(@|@company|@ui|components|utils|config|vendored-lib)(/.*|$)"
          ],
          // Side effect imports.
          [
            "^\\u0000"
          ],
          // Parent imports. Put `..` last.
          [
            "^\\.\\.(?!/?$)",
            "^\\.\\./?$"
          ],
          // Other relative imports. Put same-folder imports and `.` last.
          [
            "^\\./(?=.*/)(?!/?$)",
            "^\\.(?!/?$)",
            "^\\./?$"
          ],
          // Style imports.
          [
            "^.+\\.s?css$",
            "^.+\\.styled"
          ]
        ]
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "overrides": [
    {
      "files": [
        "**/*.stories.*"
      ],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    }
  ]
}
